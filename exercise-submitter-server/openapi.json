{
  "openapi" : "3.0.1",
  "info" : {
    "description" : "A sever for storing and retrieving exercise submissions.",
    "title" : "Exercise Submitter Server",
    "version" : "1"
  },
  "tags" : [ {
    "description" : "Sending and retrieving submission",
    "name" : "submission"
  }, {
    "description" : "Notifcations on changes in the student management system",
    "name" : "notification"
  }, {
    "description" : "Server status",
    "name" : "status"
  } ],
  "paths" : {
    "/heartbeat" : {
      "get" : {
        "description" : "Heartbeat to check if the server is running properly",
        "operationId" : "heartbeat",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StatusDto"
                }
              }
            },
            "description" : "Server is running"
          }
        },
        "tags" : [ "status" ]
      }
    },
    "/notify" : {
      "post" : {
        "description" : "Receiver for notifications on assignment and groups from the student management system",
        "operationId" : "notification",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotificationDto"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Notification received"
          },
          "500" : {
            "description" : "An unexpected internal server error occurred"
          }
        },
        "tags" : [ "notification" ]
      }
    },
    "/submission/{course}/{assignment}/{group}" : {
      "post" : {
        "description" : "Adds a new submission for the given assignment and group",
        "operationId" : "submit",
        "parameters" : [ {
          "description" : "ID of the course that contains the assignment",
          "in" : "path",
          "name" : "course",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Name of the assignment to submit to",
          "in" : "path",
          "name" : "assignment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Name of the group (or username for single assignments) to submit to",
          "in" : "path",
          "name" : "group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/FileDto"
                }
              }
            }
          },
          "description" : "The files of this submission"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "accepted" : false,
                  "messages" : [ ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/SubmissionResultDto"
                }
              }
            },
            "description" : "Submission rejected based on submission checks"
          },
          "201" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "accepted" : true,
                  "messages" : [ ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/SubmissionResultDto"
                }
              }
            },
            "description" : "Submission accepted"
          },
          "400" : {
            "description" : "Input data malformed or invalid"
          },
          "403" : {
            "description" : "User is not authorized to add a new submission"
          },
          "404" : {
            "description" : "Assignment or group does not exist"
          },
          "500" : {
            "description" : "An unexpected internal server error occurred"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "submission" ]
      }
    },
    "/submission/{course}/{assignment}/{group}/latest" : {
      "get" : {
        "description" : "Retrieves the latest submission of the given assignment and group",
        "operationId" : "getLatest",
        "parameters" : [ {
          "description" : "ID of the course that contains the assignment",
          "in" : "path",
          "name" : "course",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Name of the assignment to retrieve from",
          "in" : "path",
          "name" : "assignment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Name of the group (or username for single assignments) to retrieve from",
          "in" : "path",
          "name" : "group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FileDto"
                  }
                }
              }
            },
            "description" : "Submission is returned"
          },
          "403" : {
            "description" : "User is not authorized to retrieve a submission"
          },
          "404" : {
            "description" : "Assignment or group does not exist, or there is no version to retrieve"
          },
          "500" : {
            "description" : "An unexpected internal server error occurred"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "submission" ]
      }
    },
    "/submission/{course}/{assignment}/{group}/versions" : {
      "get" : {
        "description" : "Retrieves a list of all submitted versions for the given assignment and group",
        "operationId" : "listVersions",
        "parameters" : [ {
          "description" : "ID of the course that contains the assignment",
          "in" : "path",
          "name" : "course",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Name of the assignment to get versions for",
          "in" : "path",
          "name" : "assignment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Name of the group (or username for single assignments) to get versions for",
          "in" : "path",
          "name" : "group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/VersionDto"
                  }
                }
              }
            },
            "description" : "List of versions is returned"
          },
          "403" : {
            "description" : "User is not authorized to get the version list"
          },
          "404" : {
            "description" : "Assignment or group does not exist"
          },
          "500" : {
            "description" : "An unexpected internal server error occurred"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "submission" ]
      }
    },
    "/submission/{course}/{assignment}/{group}/{version}" : {
      "get" : {
        "description" : "Retrieves the specified submission of the given assignment and group",
        "operationId" : "getVersion",
        "parameters" : [ {
          "description" : "ID of the course that contains the assignment",
          "in" : "path",
          "name" : "course",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Name of the assignment to retrieve from",
          "in" : "path",
          "name" : "assignment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Name of the group (or username for single assignments) to retrieve from",
          "in" : "path",
          "name" : "group",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Identifies the version as a unix timestamp (seconds since epoch)",
          "in" : "path",
          "name" : "version",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FileDto"
                  }
                }
              }
            },
            "description" : "Submission is returned"
          },
          "403" : {
            "description" : "User is not authorized to retrieve a submission"
          },
          "404" : {
            "description" : "Assignment or group does not exist, or the specified version does not exist"
          },
          "500" : {
            "description" : "An unexpected internal server error occurred"
          }
        },
        "security" : [ {
          "bearerAuth" : [ ]
        } ],
        "tags" : [ "submission" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "CheckMessageDto" : {
        "type" : "object",
        "description" : "A message created by an automatic check on a submission",
        "properties" : {
          "checkName" : {
            "type" : "string",
            "description" : "The name of the automatic check",
            "example" : "javac"
          },
          "column" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The column of the line in the file that this message is about",
            "example" : 43
          },
          "file" : {
            "type" : "string",
            "description" : "The relative path of the file this message is about",
            "example" : "dir/Main.java"
          },
          "line" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The line number in the file that this message is about",
            "example" : 4
          },
          "message" : {
            "type" : "string",
            "description" : "The message created by the check",
            "example" : "';' expected"
          },
          "type" : {
            "type" : "string",
            "description" : "Whether this message is an error or a warning",
            "enum" : [ "WARNING", "ERROR" ],
            "example" : "ERROR"
          }
        },
        "required" : [ "checkName", "message", "type" ]
      },
      "FileDto" : {
        "type" : "object",
        "description" : "A single file in a submission",
        "properties" : {
          "content" : {
            "type" : "string",
            "description" : "Base64-encoded content of the file",
            "example" : "cGFja2FnZSBkaXI7CgpwdWJsaWMgY2xhc3MgTWFpbiB7CgogICAgcHVibGljIHN0YXRpYyB2b2lkIG1haW4oU3RyaW5nW10gYXJncykgewogICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbigiSGVsbG8gV29ybGQhIik7CiAgICB9Cgp9Cg=="
          },
          "path" : {
            "type" : "string",
            "description" : "Relative path of this file in the submission directory",
            "example" : "dir/Main.java"
          }
        },
        "required" : [ "content", "path" ]
      },
      "NotificationDto" : {
        "type" : "object",
        "properties" : {
          "assignmentId" : {
            "type" : "string"
          },
          "courseId" : {
            "type" : "string"
          },
          "event" : {
            "type" : "string",
            "enum" : [ "COURSE_JOINED", "ASSIGNMENT_CREATED", "ASSIGNMENT_REMOVED", "ASSIGNMENT_STATE_CHANGED", "GROUP_REGISTERED", "GROUP_UNREGISTERED", "USER_REGISTERED", "USER_UNREGISTERED", "USER_JOINED_GROUP", "USER_LEFT_GROUP", "REGISTRATIONS_CREATED", "REGISTRATIONS_REMOVED" ]
          },
          "groupId" : {
            "type" : "string"
          },
          "payload" : {
            "type" : "object"
          },
          "userId" : {
            "type" : "string"
          }
        },
        "required" : [ "courseId", "event" ]
      },
      "StatusDto" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "example" : "ok"
          }
        }
      },
      "SubmissionResultDto" : {
        "type" : "object",
        "description" : "The result of a submission",
        "properties" : {
          "accepted" : {
            "type" : "boolean",
            "description" : "Whether the submission was accepted or rejected by automatic checks"
          },
          "messages" : {
            "type" : "array",
            "description" : "Messages created by automatic checks on the submission",
            "items" : {
              "$ref" : "#/components/schemas/CheckMessageDto"
            }
          }
        },
        "required" : [ "accepted", "messages" ]
      },
      "VersionDto" : {
        "type" : "object",
        "description" : "A version of a submission",
        "properties" : {
          "author" : {
            "type" : "string",
            "description" : "The username of the author that created the submission",
            "example" : "student1"
          },
          "timestamp" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The timestamp when the version was created, as seconds since unix epoch",
            "example" : 1635177322
          }
        },
        "required" : [ "author", "timestamp" ]
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "bearerFormat" : "JWT",
        "scheme" : "bearer",
        "type" : "http"
      }
    }
  }
}